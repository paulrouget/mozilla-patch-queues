# HG changeset patch
# Parent 44b2f32ae2f4cac945af5855b58f836df3c35cfc

diff --git a/browser/app/profile/firefox.js b/browser/app/profile/firefox.js
--- a/browser/app/profile/firefox.js
+++ b/browser/app/profile/firefox.js
@@ -1028,16 +1028,17 @@ pref("services.sync.prefs.sync.xpinstall
 pref("devtools.errorconsole.enabled", false);
 
 // Enable the Inspector
 pref("devtools.inspector.enabled", true);
 pref("devtools.inspector.htmlHeight", 112);
 pref("devtools.inspector.htmlPanelOpen", false);
 pref("devtools.inspector.highlighterShowVeil", true);
 pref("devtools.inspector.highlighterShowInfobar", true);
+pref("devtools.inspector.inspectorExposeMode", true);
 
 // Enable the style inspector
 pref("devtools.styleinspector.enabled", true);
 
 // Enable the Tilt inspector
 pref("devtools.tilt.enabled", true);
 pref("devtools.tilt.intro_transition", true);
 pref("devtools.tilt.outro_transition", true);
diff --git a/browser/base/content/browser-sets.inc b/browser/base/content/browser-sets.inc
--- a/browser/base/content/browser-sets.inc
+++ b/browser/base/content/browser-sets.inc
@@ -156,16 +156,18 @@
     <command id="Inspector:HTMLPanel"
              oncommand="InspectorUI.toggleHTMLPanel();"/>
     <command id="Inspector:CopyInner" oncommand="InspectorUI.copyInnerHTML();"/>
     <command id="Inspector:CopyOuter" oncommand="InspectorUI.copyOuterHTML();"/>
     <command id="Inspector:DeleteNode" oncommand="InspectorUI.deleteNode();"/>
     <command id="Inspector:ToggleVeil" oncommand="InspectorUI.toggleVeil();"/>
     <command id="Inspector:ToggleInfobar"
              oncommand="InspectorUI.toggleInfobar();"/>
+    <command id="Inspector:ToggleExposeMode"
+             oncommand="InspectorUI.toggleExposeMode();"/>
   </commandset>
 
   <broadcasterset id="mainBroadcasterSet">
     <broadcaster id="viewBookmarksSidebar" autoCheck="false" label="&bookmarksButton.label;"
                  type="checkbox" group="sidebar" sidebarurl="chrome://browser/content/bookmarks/bookmarksPanel.xul"
                  oncommand="toggleSidebar('viewBookmarksSidebar');"/>
 
     <!-- for both places and non-places, the sidebar lives at
diff --git a/browser/base/content/browser.xul b/browser/base/content/browser.xul
--- a/browser/base/content/browser.xul
+++ b/browser/base/content/browser.xul
@@ -1023,16 +1023,21 @@
                     label="&inspectorToggleVeil.label;"
                     accesskey="&inspectorToggleVeil.accesskey;"
                     command="Inspector:ToggleVeil"/>
           <menuitem id="inspectorToggleInfobar"
                     type="checkbox"
                     label="&inspectorToggleInfobar.label;"
                     accesskey="&inspectorToggleInfobar.accesskey;"
                     command="Inspector:ToggleInfobar"/>
+          <menuitem id="inspectorToggleExpose"
+                    type="checkbox"
+                    label="&inspectorToggleExpose.label;"
+                    accesskey="&inspectorToggleExpose.accesskey;"
+                    command="Inspector:ToggleExposeMode"/>
         </menupopup>
       </toolbarbutton>
       <toolbarbutton id="inspector-inspect-toolbutton"
                      class="devtools-toolbarbutton"
                      accesskey="&inspectButton.accesskey;"
                      tooltiptext="&inspectButton.tooltiptext;"
                      command="Inspector:Inspect"/>
       <toolbarbutton id="inspector-treepanel-toolbutton"
diff --git a/browser/base/content/highlighter.css b/browser/base/content/highlighter.css
--- a/browser/base/content/highlighter.css
+++ b/browser/base/content/highlighter.css
@@ -5,16 +5,22 @@
 #highlighter-controls {
   position: absolute;
   top: 0;
   left: 0;
 }
 
 #highlighter-veil-container {
   overflow: hidden;
+  -moz-transition-property: opacity;
+  -moz-transition-duration: 100ms;
+}
+
+#highlighter-veil-container[transparent] {
+  opacity: 0;
 }
 
 #highlighter-veil-container:not([dim]) .highlighter-veil {
   background-color: transparent;
 }
 
 #highlighter-veil-container:not([disable-transitions]) > .highlighter-veil,
 #highlighter-veil-container:not([disable-transitions]) > #highlighter-veil-middlebox,
@@ -40,16 +46,22 @@
 
 /*
  * Node Infobar
  */
 
 #highlighter-nodeinfobar-container {
   position: absolute;
   max-width: 95%;
+  -moz-transition-property: opacity;
+  -moz-transition-duration: 100ms;
+}
+
+#highlighter-nodeinfobar-container[transparent] {
+  opacity: 0;
 }
 
 #highlighter-nodeinfobar-container:not([disable-transitions]) {
   -moz-transition-property: top, left;
   -moz-transition-duration: 0.1s;
   -moz-transition-timing-function: linear;
 }
 
diff --git a/browser/devtools/highlighter/highlighter.jsm b/browser/devtools/highlighter/highlighter.jsm
--- a/browser/devtools/highlighter/highlighter.jsm
+++ b/browser/devtools/highlighter/highlighter.jsm
@@ -280,31 +280,32 @@ Highlighter.prototype = {
     return this.node;
   },
 
   /**
    * Show the highlighter if it has been hidden.
    */
   show: function() {
     if (!this.hidden) return;
-    this.veilContainer.removeAttribute("hidden");
-    this.nodeInfo.container.removeAttribute("hidden");
+    this.brieflyDisableTransitions();
+    this.veilContainer.removeAttribute("transparent");
+    this.nodeInfo.container.removeAttribute("transparent");
     this.attachKeysListeners();
     this.attachPageListeners();
     this.invalidateSize();
     this.hidden = false;
   },
 
   /**
    * Hide the highlighter, the veil and the infobar.
    */
   hide: function() {
     if (this.hidden) return;
-    this.veilContainer.setAttribute("hidden", "true");
-    this.nodeInfo.container.setAttribute("hidden", "true");
+    this.veilContainer.setAttribute("transparent", "true");
+    this.nodeInfo.container.setAttribute("transparent", "true");
     this.detachKeysListeners();
     this.detachPageListeners();
     this.hidden = true;
   },
 
   /**
    * Is the highlighter visible?
    *
diff --git a/browser/devtools/highlighter/inspector.jsm b/browser/devtools/highlighter/inspector.jsm
--- a/browser/devtools/highlighter/inspector.jsm
+++ b/browser/devtools/highlighter/inspector.jsm
@@ -124,16 +124,37 @@ InspectorUI.prototype = {
     if (this.isInspectorOpen) {
       this.closeInspectorUI();
     } else {
       this.openInspectorUI();
     }
   },
 
   /**
+   * Enable "exposé" mode.
+   */
+  enableExposeMode: function IUI_enableExposeMode() {
+    this.chromeDoc.getElementById("content").
+      setAttribute("inspect-expose-mode", true);
+  },
+
+  /**
+   * Disable "exposé" mode.
+   */
+  disableExposeMode: function IUI_disableExposeMode() {
+    this.chromeDoc.getElementById("content").
+      removeAttribute("inspect-expose-mode");
+  },
+
+  mobile: function() {
+    this.highlighter.hide();
+    this.chromeDoc.getElementById("content").classList.add("mobile");
+  },
+
+  /**
    * Show the Sidebar.
    */
   showSidebar: function IUI_showSidebar()
   {
     this.sidebarBox.removeAttribute("hidden");
     this.sidebarSplitter.removeAttribute("hidden");
     this.stylingButton.checked = true;
 
@@ -252,16 +273,35 @@ InspectorUI.prototype = {
       this.highlighter.showInfobar();
       this.store.setValue(this.winID, "highlighterShowInfobar", true);
       Services.prefs.setBoolPref("devtools.inspector.highlighterShowInfobar",
                                   true);
     }
   },
 
   /**
+   * Toggle expose mode.
+   */
+  toggleExposeMode: function IUI_toggleExposeMode()
+  {
+    let active = this.store.getValue(this.winID, "inspectorExposeMode");
+    if (active) {
+      this.disableExposeMode();
+      this.store.setValue(this.winID, "inspectorExposeMode", false);
+      Services.prefs.setBoolPref("devtools.inspector.inspectorExposeMode",
+                                  false);
+    } else {
+      this.enableExposeMode();
+      this.store.setValue(this.winID, "inspectorExposeMode", true);
+      Services.prefs.setBoolPref("devtools.inspector.inspectorExposeMode",
+                                  true);
+    }
+  },
+
+  /**
    * Return the default selection element for the inspected document.
    */
   get defaultSelection()
   {
     let doc = this.win.document;
     return doc.documentElement ? doc.documentElement.lastElementChild : null;
   },
 
@@ -406,16 +446,19 @@ InspectorUI.prototype = {
         Services.prefs.getBoolPref("devtools.inspector.htmlPanelOpen"));
 
       this.store.setValue(this.winID, "highlighterShowVeil",
         Services.prefs.getBoolPref("devtools.inspector.highlighterShowVeil"));
 
       this.store.setValue(this.winID, "highlighterShowInfobar",
         Services.prefs.getBoolPref("devtools.inspector.highlighterShowInfobar"));
 
+      this.store.setValue(this.winID, "inspectorExposeMode",
+        Services.prefs.getBoolPref("devtools.inspector.inspectorExposeMode"));
+
       this.win.addEventListener("pagehide", this, true);
     }
   },
 
   /**
    * Browse nodes according to the breadcrumbs layout, only for some specific
    * elements of the UI.
    */
@@ -459,16 +502,18 @@ InspectorUI.prototype = {
   {
     // if currently editing an attribute value, closing the
     // highlighter/HTML panel dismisses the editor
     if (this.treePanel && this.treePanel.editingContext)
       this.treePanel.closeEditor();
 
     this.treePanel.destroy();
 
+    this.disableExposeMode();
+
     if (this.closing || !this.win || !this.browser) {
       return;
     }
 
     let winId = new String(this.winID); // retain this to notify observers.
 
     this.closing = true;
     this.toolbar.hidden = true;
@@ -669,16 +714,29 @@ InspectorUI.prototype = {
       menu.setAttribute("checked", true);
       this.highlighter.showInfobar();
     } else {
       menu.removeAttribute("checked");
       this.highlighter.hideInfobar();
     }
 
     this.highlighter.highlight();
+    this.highlighter.hide();
+
+    menu = this.chromeDoc.getElementById("inspectorToggleExpose");
+    if (this.store.getValue(this.winID, "inspectorExposeMode")) {
+      menu.setAttribute("checked", true);
+      this.enableExposeMode();
+      this.chromeWin.setTimeout(this.highlighter.show.bind(this.highlighter),
+                                100);
+    } else {
+      menu.removeAttribute("checked");
+      this.disableExposeMode();
+      this.highlighter.show();
+    }
   },
 
   /**
    * Main callback handler for events.
    *
    * @param event
    *        The event to be handled.
    */
diff --git a/browser/locales/en-US/chrome/browser/browser.dtd b/browser/locales/en-US/chrome/browser/browser.dtd
--- a/browser/locales/en-US/chrome/browser/browser.dtd
+++ b/browser/locales/en-US/chrome/browser/browser.dtd
@@ -233,16 +233,18 @@ can reach it easily. -->
 <!-- LOCALIZATION NOTE: The menu in the Inspector toolbar -->
 <!ENTITY inspectMenuButton.tooltiptext      "Inspector Options">
 
 <!-- LOCALIZATION NOTE: These are for the menu in the Inspector Toolbar -->
 <!ENTITY inspectorToggleVeil.label          "Dim the page">
 <!ENTITY inspectorToggleVeil.accesskey      "D">
 <!ENTITY inspectorToggleInfobar.label       "Show the node details">
 <!ENTITY inspectorToggleInfobar.accesskey   "S">
+<!ENTITY inspectorToggleExpose.label        "Margins around the page">
+<!ENTITY inspectorToggleExpose.accesskey    "M">
 
 <!-- LOCALIZATION NOTE (inspect3DViewButton.label): This button shows an
   -  alternate view for the Inspector, creating a 3D visualization of the
   -  webpage. -->
 <!ENTITY inspect3DViewButton.label     "3D View">
 <!ENTITY inspect3DViewButton.accesskey "W">
 
 <!ENTITY inspectStyleButton.label     "Style">
diff --git a/browser/themes/gnomestripe/browser.css b/browser/themes/gnomestripe/browser.css
--- a/browser/themes/gnomestripe/browser.css
+++ b/browser/themes/gnomestripe/browser.css
@@ -1950,17 +1950,17 @@ panel[dimmed="true"] {
   border-left-style: solid;
   border-top-left-radius: .3em;
   margin-left: 1em;
 }
 
 /* Highlighter */
 
 .highlighter-veil {
-  background-color: rgba(25, 25, 25, 0.5);
+  background-color: rgba(25, 25, 25, 0.3);
 }
 
 #highlighter-closebutton {
   list-style-image: url("moz-icon://stock/gtk-close?size=menu");
   margin-top: 0;
   margin-bottom: 0;
 }
 
@@ -2389,8 +2389,28 @@ html|*#highlighter-nodeinfobar-id {
 
 #inspector-tree-splitter {
   -moz-appearance: none;
   height: 4px;
   border-top: 1px solid hsla(210,8%,5%,.45);
   border-bottom: 1px solid hsla(210,8%,5%,.45);
   background: -moz-linear-gradient(top, hsl(210,11%,36%), hsl(210,11%,18%));
 }
+
+/* Inspector exposé */
+
+#content {
+  -moz-transition-property: padding;
+  -moz-transition-duration: 200ms;
+  background: url(http://i.imgur.com/TPmsp.png) !important;
+}
+
+#content[inspect-expose-mode] {
+  padding: 10px;
+}
+
+#content[inspect-expose-mode].mobile {
+  padding: 30px 350px;
+}
+
+#content[inspect-expose-mode] > .tabbrowser-tabbox {
+  box-shadow: 0 0 20px black;
+}
diff --git a/browser/themes/pinstripe/browser.css b/browser/themes/pinstripe/browser.css
--- a/browser/themes/pinstripe/browser.css
+++ b/browser/themes/pinstripe/browser.css
@@ -2677,17 +2677,17 @@ panel[dimmed="true"] {
   border-top-left-radius: .3em;
   margin-left: 1em;
 }
 
 
 /* Highlighter */
 
 .highlighter-veil {
-  background-color: rgba(25, 25, 25, 0.5);
+  background-color: rgba(25, 25, 25, 0.3);
 }
 
 #highlighter-closebutton {
   list-style-image: url("chrome://browser/skin/devtools/toolbarbutton-close.png");
   -moz-image-region: rect(0, 16px, 16px, 0);
   min-width: 16px;
   width: 16px;
   margin: 0 4px;
@@ -3136,8 +3136,24 @@ html|*#highlighter-nodeinfobar-id {
 #inspector-tree-splitter {
   -moz-appearance: none;
   height: 4px;
   min-height: 4px;
   border-top: 1px solid hsla(210,8%,5%,.45);
   border-bottom: 1px solid hsla(210,8%,5%,.45);
   background: url(devtools/background-noise-toolbar.png), -moz-linear-gradient(top, hsl(210,11%,36%), hsl(210,11%,18%));
 }
+
+/* Inspector exposé */
+
+#content {
+  -moz-transition-property: padding;
+  -moz-transition-duration: 200ms;
+  background: url(http://i.imgur.com/TPmsp.png) !important;
+}
+
+#content[inspect-expose-mode] {
+  padding: 20px;
+}
+
+#content[inspect-expose-mode] > .tabbrowser-tabbox {
+  box-shadow: 0 0 20px black;
+}
diff --git a/browser/themes/winstripe/browser.css b/browser/themes/winstripe/browser.css
--- a/browser/themes/winstripe/browser.css
+++ b/browser/themes/winstripe/browser.css
@@ -2626,17 +2626,17 @@ panel[dimmed="true"] {
   border-top-left-radius: .3em;
   */
   margin-left: 1em;
 }
 
 /* Highlighter */
 
 .highlighter-veil {
-  background-color: rgba(25, 25, 25, 0.5);
+  background-color: rgba(25, 25, 25, 0.3);
 }
 
 #highlighter-closebutton {
   list-style-image: url("chrome://browser/skin/devtools/toolbarbutton-close.png");
   -moz-image-region: rect(0, 16px, 16px, 0);
   min-width: 16px;
   width: 16px;
   -moz-appearance: none;
@@ -3070,8 +3070,24 @@ html|*#highlighter-nodeinfobar-id {
 #inspector-tree-splitter {
   -moz-appearance: none;
   height: 4px;
   min-height: 4px;
   border-top: 1px solid hsla(211,68%,6%,.5);
   border-bottom: 1px solid hsla(211,68%,6%,.5);
   background: -moz-linear-gradient(top, hsl(209,18%,34%), hsl(210,24%,16%));
 }
+
+/* Inspector exposé */
+
+#content {
+  -moz-transition-property: padding;
+  -moz-transition-duration: 200ms;
+  background: url(http://i.imgur.com/TPmsp.png) !important;
+}
+
+#content[inspect-expose-mode] {
+  padding: 20px;
+}
+
+#content[inspect-expose-mode] > .tabbrowser-tabbox {
+  box-shadow: 0 0 20px black;
+}
